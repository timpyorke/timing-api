{
	"info": {
		"_postman_id": "timing-api-collection",
		"name": "Timing API - Order Management with FCM",
		"description": "Complete API collection for Timing API with Firebase authentication and push notifications",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "timing-api"
	},
	"item": [
		{
			"name": "Customer Endpoints",
			"item": [
				{
					"name": "Get Menu",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/menu",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"menu"
							]
						},
						"description": "Get menu items organized by category"
					},
					"response": []
				},
				{
					"name": "Create Order",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customer_info\": {\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"phone\": \"+1234567890\"\n  },\n  \"items\": [\n    {\n      \"beverage_id\": 1,\n      \"quantity\": 2,\n      \"price\": 3.50,\n      \"customizations\": {\n        \"size\": \"Large\",\n        \"extras\": [\"Extra Shot\"]\n      }\n    }\n  ],\n  \"total\": 7.00\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders"
							]
						},
						"description": "Create a new order (triggers FCM notification to admins)"
					},
					"response": []
				},
				{
					"name": "Check Order Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/orders/{{order_id}}/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"{{order_id}}",
								"status"
							]
						},
						"description": "Check the status of a specific order"
					},
					"response": []
				}
			],
			"description": "Public endpoints for customers"
		},
		{
			"name": "Admin - Authentication",
			"item": [
				{
					"name": "Debug Token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/debug-token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"debug-token"
							]
						},
						"description": "Debug Firebase JWT token validation"
					},
					"response": []
				}
			],
			"description": "Authentication and debugging endpoints"
		},
		{
			"name": "Admin - FCM Notifications",
			"item": [
				{
					"name": "Store FCM Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fcm_token\": \"cJ4lN5zGSyq1MKp8mF7wXR:APA91bH2vY6pN8wGq4sL9dF3kXmYe1nR7tUv9cA8bK6hJ5mP2qI4oE7zC3fT1nW9xS8TestToken\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/fcm-token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"fcm-token"
							]
						},
						"description": "Store FCM token for push notifications"
					},
					"response": []
				},
				{
					"name": "Send Test Notification",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Test Notification\",\n  \"body\": \"This is a test notification from Postman\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/test-notification",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"test-notification"
							]
						},
						"description": "Send test push notification"
					},
					"response": []
				}
			],
			"description": "Firebase Cloud Messaging endpoints"
		},
		{
			"name": "Admin - Order Management",
			"item": [
				{
					"name": "Get All Orders",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"orders"
							]
						},
						"description": "Get all orders with details"
					},
					"response": []
				},
				{
					"name": "Get Orders by Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/orders?status=pending",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"orders"
							],
							"query": [
								{
									"key": "status",
									"value": "pending",
									"description": "Filter by order status: pending, preparing, ready, completed, cancelled"
								}
							]
						},
						"description": "Get orders filtered by status"
					},
					"response": []
				},
				{
					"name": "Get Orders by Date",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/orders?date=2025-07-31",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"orders"
							],
							"query": [
								{
									"key": "date",
									"value": "2025-07-31",
									"description": "Filter by date (YYYY-MM-DD format)"
								}
							]
						},
						"description": "Get orders filtered by date"
					},
					"response": []
				},
				{
					"name": "Get Single Order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/orders/{{order_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"orders",
								"{{order_id}}"
							]
						},
						"description": "Get details of a specific order"
					},
					"response": []
				},
				{
					"name": "Update Order Status",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"preparing\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/orders/{{order_id}}/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"orders",
								"{{order_id}}",
								"status"
							]
						},
						"description": "Update order status (pending, preparing, ready, completed, cancelled)"
					},
					"response": []
				},
				{
					"name": "Delete Order",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/orders/{{order_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"orders",
								"{{order_id}}"
							]
						},
						"description": "Delete a specific order"
					},
					"response": []
				}
			],
			"description": "Order management endpoints for admins"
		},
		{
			"name": "Admin - Menu Management",
			"item": [
				{
					"name": "Get Admin Menu",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/menu",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"menu"
							]
						},
						"description": "Get all menu items (including inactive ones)"
					},
					"response": []
				},
				{
					"name": "Create Menu Item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Cold Brew\",\n  \"category\": \"Coffee\",\n  \"base_price\": 4.00,\n  \"customizations\": {\n    \"sizes\": [\"Small\", \"Medium\", \"Large\"],\n    \"milk\": [\"Regular\", \"Oat\", \"Almond\"],\n    \"extras\": [\"Vanilla Syrup\", \"Caramel Syrup\"]\n  },\n  \"active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/menu",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"menu"
							]
						},
						"description": "Create a new menu item"
					},
					"response": []
				},
				{
					"name": "Update Menu Item",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Premium Cold Brew\",\n  \"category\": \"Coffee\",\n  \"base_price\": 4.50,\n  \"customizations\": {\n    \"sizes\": [\"Small\", \"Medium\", \"Large\"],\n    \"milk\": [\"Regular\", \"Oat\", \"Almond\", \"Coconut\"],\n    \"extras\": [\"Vanilla Syrup\", \"Caramel Syrup\", \"Hazelnut Syrup\"]\n  },\n  \"active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/admin/menu/{{menu_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"menu",
								"{{menu_id}}"
							]
						},
						"description": "Update an existing menu item"
					},
					"response": []
				},
				{
					"name": "Delete Menu Item",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/menu/{{menu_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"menu",
								"{{menu_id}}"
							]
						},
						"description": "Delete a menu item"
					},
					"response": []
				}
			],
			"description": "Menu management endpoints for admins"
		},
		{
			"name": "Admin - Analytics",
			"item": [
				{
					"name": "Get Today's Sales",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{firebase_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/sales/today",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"sales",
								"today"
							]
						},
						"description": "Get today's sales summary and statistics"
					},
					"response": []
				}
			],
			"description": "Analytics and reporting endpoints"
		},
		{
			"name": "System",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check API health status"
					},
					"response": []
				}
			],
			"description": "System health and status endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set base URL if not already set",
					"if (!pm.collectionVariables.get('base_url')) {",
					"    pm.collectionVariables.set('base_url', 'http://localhost:3000');",
					"}",
					"",
					"// Add timestamp for requests",
					"pm.collectionVariables.set('timestamp', new Date().toISOString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test to check response time",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"// Global test to check status code is not 500",
					"pm.test('Status code is not 500 (Server Error)', function () {",
					"    pm.expect(pm.response.code).to.not.equal(500);",
					"});",
					"",
					"// Set order_id from create order response",
					"if (pm.request.url.toString().includes('/api/orders') && pm.request.method === 'POST') {",
					"    if (pm.response.code === 201) {",
					"        const responseJson = pm.response.json();",
					"        if (responseJson.data && responseJson.data.id) {",
					"            pm.collectionVariables.set('order_id', responseJson.data.id);",
					"            console.log('Set order_id:', responseJson.data.id);",
					"        }",
					"    }",
					"}",
					"",
					"// Set menu_id from create menu response",
					"if (pm.request.url.toString().includes('/api/admin/menu') && pm.request.method === 'POST') {",
					"    if (pm.response.code === 201) {",
					"        const responseJson = pm.response.json();",
					"        if (responseJson.data && responseJson.data.id) {",
					"            pm.collectionVariables.set('menu_id', responseJson.data.id);",
					"            console.log('Set menu_id:', responseJson.data.id);",
					"        }",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "firebase_token",
			"value": "YOUR_FIREBASE_JWT_TOKEN_HERE",
			"type": "string"
		},
		{
			"key": "order_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "menu_id",
			"value": "1",
			"type": "string"
		},
		{
			"key": "timestamp",
			"value": "",
			"type": "string"
		}
	]
}